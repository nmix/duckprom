version: '3'

services:
  proxy:
    image: traefik:v2.9
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker"
      - "--entrypoints.api.address=:8080"
      - "--entrypoints.nodeexporter.address=:9100"
      - "--entrypoints.cadvisor.address=:9200"
      - "--entrypoints.nginxexporter.address=:9300"
      - "--entrypoints.loki.address=:9400"
    ports:
      - "8080:8080"
      - "9100:9100"
      - "9200:9200"
      - "9300:9300"
      - "9400:9400"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      - "traefik.http.routers.traefik.rule=PathPrefix(`/`)"
      - "traefik.http.routers.traefik.entrypoints=api"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH_CREDS}"

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      - "traefik.http.routers.nodeexporter.entrypoints=nodeexporter"
      - "traefik.http.routers.nodeexporter.rule=PathPrefix(`/`)"
      - "traefik.http.routers.nodeexporter.middlewares=auth"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      - "traefik.http.routers.cadvisor.entrypoints=cadvisor"
      - "traefik.http.routers.cadvisor.rule=PathPrefix(`/`)"
      - "traefik.http.routers.cadvisor.middlewares=auth"

  loki:
    image: grafana/loki:2.3.0
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/loki-config.yaml
      - loki_data:/data/loki
    restart: unless-stopped
    expose:
      - 3100
    networks:
      - monitor-net
    labels:
      - "traefik.http.routers.loki.entrypoints=loki"
      - "traefik.http.routers.loki.rule=PathPrefix(`/`)"
      - "traefik.http.routers.loki.middlewares=auth"

  promtail:
    image: grafana/promtail:2.5.0
    command: -config.file=/etc/promtail/promtail-config.yaml
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/config.yaml:/etc/promtail/promtail-config.yaml
    expose:
      - 9080
    networks:
      - monitor-net

  # nginxexporter:
  #   image: quay.io/martinhelmich/prometheus-nginxlog-exporter:v1.9.2
  #   command:
  #     - "-format=$$remote_addr - $$remote_user [$$time_local] \"$$request\" $$status $$body_bytes_sent \"$$http_referer\" \"$$http_user_agent\" rt=$$request_time uct=\"$$upstream_connect_time\" uht=\"$$upstream_header_time\" urt=\"$$upstream_response_time\""
  #     - "mnt/nginxlogs/access.log"
  #   restart: unless-stopped
  #   volumes:
  #     - /var/log/nginx:/mnt/nginxlogs
  #   restart: unless-stopped
  #   expose:
  #     - 4040
  #   networks:
  #     - monitor-net
  #   labels:
  #     - "traefik.http.routers.nginxexporter.entrypoints=nginxexporter"
  #     - "traefik.http.routers.nginxexporter.rule=PathPrefix(`/`)"
  #     - "traefik.http.routers.nginxexporter.middlewares=auth"

networks:
  monitor-net:
    driver: bridge

volumes:
  loki_data: {}
